% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MLE.R
\name{MLE}
\alias{MLE}
\title{Simple Maximum Likelihood Estimation based on normal residual assumption.}
\usage{
MLE(y, X, LogLFunc = c("LogL_GARCH_Norm", "LogL_Linear_Norm"), order = c(1,
  1))
}
\arguments{
\item{y}{The dependent variable or time series.}

\item{X}{The single independent variable for single linear regression. It could be
missing if use this function to estimate GARCH(p,q) model.}

\item{LogLFunc}{The log-likelihood function of models.}

\item{order}{The order of GARCH model.}
}
\value{
is the estimated parameters of GARCH(p,q)
}
\description{
Simple Maximum Likelihood Estimation based on normal residual assumption.
}
\examples{
# Test for GARCH(1,1) with t innovation #
library(tseries)
xx <- GARCH_t(alpha = c(0.1, 0.4), beta = 0.4, n = 2000, rnd = "rt", df.t = 4)
y <- xx$x
plot(y, type = "l")
# Estimate parameters using "garch" function in the "tseries" package
x.arch <- garch(y, order = c(1,1))
est1 <- MLE(y = y, LogLFunc = LogL_GARCH_Norm, order = c(1,1))
est1

# Example for single linear regression model.
# Simulate from the model \\eqn{Y=\\beta_0+\\beta_1*x+N(0,\\sigma^2)}
# Inputs: intercept; slope; variance; vector of x; return sample or estimated
# Fix x values for all runs of the simulation; draw from an exponential
n <- 2000 # So we don't have magic #s floating around
beta.0 <- 5; beta.1 <- -2; sigma.sq <- 1; fixed.x <- rexp(n=n)
data <- gen.lin(intercept=beta.0, slope = beta.1, noise.variance=sigma.sq, x=fixed.x, dis.error = "rt", dft=3)
par(mfrow=c(1,1))
hist(fixed.x, freq = FALSE, breaks = 50, xlab = expression(x[i]), main = "")
hist(data$y, freq = FALSE, breaks = 50, xlab = expression(y[i]), main = "")
plot(data$x, data$y)
test <- lm(data$y~data$x)
test
y <- as.matrix(data$y); X <- as.matrix(data$x)
myMLE <- MLE(y, X, LogLFunc = "LogL_Linear_Norm")
myMLE
# Very good example for single linear regression by suing "MLE" function.
}

